name: 🚀 构建发货助手APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-apk:
    runs-on: ubuntu-20.04
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v3
      
    - name: 🐍 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: ☕ 设置Java环境  
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '8'
        
    - name: 📦 安装系统依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-8-jdk build-essential ccache autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev
        
    - name: 🔧 安装Python依赖
      run: |
        python -m pip install --upgrade pip
        pip install buildozer==1.5.0 cython==0.29.33
        
    - name: 🏗️ 构建APK
      run: |
        echo "🚀 开始构建APK..."
        echo "📍 当前目录：$(pwd)"
        echo "📋 文件列表："
        ls -la
        
        # 验证必要文件
        if [ ! -f "buildozer.spec" ]; then
          echo "❌ buildozer.spec文件不存在"
          exit 1
        fi
        
        if [ ! -f "main_chinese.py" ]; then
          echo "❌ main_chinese.py文件不存在"
          exit 1
        fi
        
        # 设置环境变量
        export ANDROIDAPI="30"
        export NDKAPI="21"
        
        # 开始构建
        buildozer android debug
        
    - name: 📱 上传APK文件
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: 发货助手-APK
        path: bin/*.apk
        retention-days: 30
        
    - name: 📋 显示构建信息
      if: always()
      run: |
        echo "📦 构建完成状态检查："
        if [ -d "bin" ]; then
          echo "✅ bin目录存在"
          ls -la bin/
        else
          echo "❌ bin目录不存在"
        fi
        
        echo "📋 buildozer日志位置："
        find . -name "*.log" -type f | head -5
